@startuml
skinparam component {
    backgroundColor<<Source>> Yellow
    backgroundColor<<Process>> Green
    backgroundColor<<Artifact>> Red
}

actor "Package Author"
package "rpm-docker-buildchain" {
    [Spec] <<Source>>
    [retrieve-sources] <<Process>>
    [Files] <<Source>>
    [build-package] <<Process>>
    [RPM] <<Artifact>>

    [Package Author] ..> [Spec] : Create spec file
    [Package Author] ..> [Files] : Add service unit, config files, patches, etc
    [Spec] <-- [retrieve-sources] : Read URLs from SourceX: attributes
    [retrieve-sources] --> [Files] : Download files, Verifiy checksums
    [Spec] <-- [build-package] : Read spec file
    [Files] <-- [build-package] : Read source files
    [build-package] --> [RPM] : Build RPM

    note right of [Spec]
        ./build.sh create-spec foobar
        rpmbuild/SPECS/{package}.spec
    end note

    note right of [Files]
        rpmbuild/SOURCES/{package}
    end note

    note right of [retrieve-sources]
        ./build.sh retrieve-sources
    end note

    note right of [RPM]
        rpmbuild/RPMS/{arch}/{package}.rpm
    end note

    note right of [build-package]
        ./build.sh all-rpms
        ./build.sh single-rpm {package}
    end note
}

[publish-package]
[Yum Repository]
database "CentOS 7 Hosts"

[RPM] <.. [publish-package] : Find RPMs to publish
[publish-package] .right.> [Yum Repository] : Copy RPM to remote server\nUpdate yum metadata
[CentOS 7 Hosts] .up.> [Yum Repository] : Download, Install/Update RPMs

@enduml
